[
    {
        "img_name": "advanced_maze_solver.png",
        "alt_txt": "A maze with two dots in it",
        "link": "https://blahnikkai.github.io/advanced-maze-solver/",
        "title": "Advanced Maze Solver",
        "tech": "Javascript, HTML, CSS",
        "on_homepage": true,
        "desc": "Find a path in a maze from a startpoint to endpoint with depth-first, breadth-first, and A* search algorithms."
    },
    {
        "img_name": "graph_generator.png",
        "alt_txt": "Three white circles connected by two lines on a black background",
        "link": "https://blahnikkai.github.io/graph-generator/",
        "title": "Graph Generator",
        "tech": "Javascript, HTML, CSS",
        "on_homepage": true,
        "desc": "Place points and animate the creation of a convex hull or a minimum spanning tree with weights based on Euclidian distance."
    },
    {
        "img_name": "binomial_machine.png",
        "alt_txt": "A histogram with one bar filled in solid blue",
        "link": "https://github.com/blahnikkai/binomial-machine/",
        "title": "Binomial Machine",
        "tech": "Python, Matplotlib, Tkinter",
        "on_homepage": true,
        "desc": "Create and visualize a binomial distribution by defining a mean and standard deviation, find exact and cumulative probabilities within a binomial distribution, see the normal distribution approximation, and simulate Bernoulli trials."
    },
    {
        "img_name": "pandemic_simulator.png",
        "alt_txt": "Two colored circles with dashed circles around them",
        "link": "https://github.com/blahnikkai/pandemic-simulator/",
        "title": "Pandemic Simulator",
        "tech": "Java, JavaFX",
        "on_homepage": true,
        "desc": "Simulate a pandemic spreading throughout a population. Physically divide areas by drawing walls."
    },
    {
        "img_name": "personal_website.png",
        "alt_txt": "A yellow B on a dark gray background",
        "link": "/",
        "title": "Blahnik.ai",
        "tech": "React, Javascript, HTML, CSS",
        "on_homepage": false,
        "desc": "Personal portfolio website. See my projects, experience, and contact information."
    },
    {
        "img_name": "double_pendulum_simulator.png",
        "alt_txt": "A double pendulum with blue weights. The lower blue weight ",
        "link": "https://github.com/blahnikkai/double-pendulum-simulator",
        "title": "Double Pendulum Simulator",
        "tech": "C++, SFML",
        "on_homepage": false,
        "desc": "Simulate a single and double pendulum using the Euler-Cromer method of numeric integration. Add pendulums with different lengths, masses, and initial angles."
    },
    {
        "img_name": "optimal_odyssey.png",
        "alt_txt": "A globe with white dots on it and a red path connecting the dots",
        "link": "https://optimalodyssey.vercel.app/",
        "title": "Optimal Odyssey",
        "tech": "React, Cesium, Javascript, HTML, CSS",
        "on_homepage": true,
        "desc": "Animate the solution to the traveling salesperson problem with Held-Karp, which uses bitmask dynamic programming to find an exact solution. Compare this to a quick approximation found by the nearest neighbor heuristic. Allow users to manually solve the problem themselves."
    }
]